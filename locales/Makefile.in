#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


DEPTH=../../..
topsrcdir=@top_srcdir@
srcdir=@srcdir@
VPATH=@srcdir@
relativesrcdir = extensions/irc/locales

include $(srcdir)/../maxversions.mk

EXTERNALLY_MANAGED_MAKE_FILE := 1
STANDALONE_MAKEFILE := 1
JAR_MANIFEST := $(srcdir)/jar.mn

CHATZILLA_VERSION=$(shell grep "const __cz_version" "$(srcdir)/../xul/content/static.js" | sed "s|.*\"\([^\"]\{1,\}\)\".*|\1|")
CHATZILLA_BASE_VERSION=$(shell echo "$(CHATZILLA_VERSION)" | sed "s|\([0-9]\{1,\}\.[0-9]\{1,\}\.[0-9]\{1,\}\).*|\1|")

XPI_NAME               = chatzilla
INSTALL_EXTENSION_ID   = {59c81df5-4b7a-477b-912d-4e0fdf64e5f2}
XPI_PKGNAME            = chatzilla-$(CHATZILLA_VERSION)

# include config.mk before we override the AB_CD var it sets
include $(topsrcdir)/config/config.mk

# if the wanted language is not in all-locales, fall back to en-US
ifeq (,$(filter $(AB_CD),$(shell cat $(srcdir)/all-locales)))
override AB_CD = en-US
endif

ifneq (en-US,$(AB_CD))
XPI_NAME               = chatzilla-$(AB_CD)
INSTALL_EXTENSION_ID   = langpack-$(AB_CD)@chatzilla.mozilla.org
XPI_PKGNAME            = chatzilla-$(CHATZILLA_VERSION).$(AB_CD)
endif

DEFINES += -DAB_CD=$(AB_CD) \
           -DSEAMONKEY_MAXVERSION=$(SEAMONKEY_MAXVERSION) \
           -DFIREFOX_MAXVERSION=$(FIREFOX_MAXVERSION) \
           -DINSTALL_EXTENSION_ID="$(INSTALL_EXTENSION_ID)" \
           -DCHATZILLA_VERSION=$(CHATZILLA_VERSION) \
           -DCHATZILLA_BASE_VERSION=$(CHATZILLA_BASE_VERSION) \
           $(NULL)

APP_DEFINES = $(firstword $(wildcard $(LOCALE_SRCDIR)/defines.inc) \
                          $(srcdir)/en-US/defines.inc)

TK_DEFINES = $(firstword \
             $(wildcard $(call EXPAND_LOCALE_SRCDIR,toolkit/locales)/defines.inc) \
             $(MOZILLA_DIR)/toolkit/locales/en-US/defines.inc)

include $(topsrcdir)/config/rules.mk

ifneq (en-US,$(AB_CD))
libs realchrome::
	@echo "Comparing $(AB_CD) to en-US"
	@$(PERL) $(topsrcdir)/toolkit/locales/compare-locales.pl $(srcdir)/en-US $(LOCALE_SRCDIR)
	$(call py_action,preprocessor,$(DEFINES) $(ACDEFINES) \
	  -DTK_DEFINES=$(TK_DEFINES) -DAPP_DEFINES=$(APP_DEFINES) \
	  $(srcdir)/generic/install.rdf -o $(DIST)/xpi-stage/$(XPI_NAME)/install.rdf)
endif

libs-%: AB_CD=$*
libs-%:
	# XXX: it would be nice if we could just do nothing if no langpack is being done
	#  currently, we just go and (re)build en-US if called with a non-supported locale
	$(MAKE) libs AB_CD=$*

repackage-zip: $(STAGEDIST)
ifneq (en-US,$(AB_CD))
	$(RM) -rf $(STAGEDIST)/extensions/$(INSTALL_EXTENSION_ID)
	mkdir $(STAGEDIST)/extensions/$(INSTALL_EXTENSION_ID)
	if test -d "$(DIST)/xpi-stage/$(XPI_NAME)/chrome/chatzilla.jar"; then \
	  $(RM) -r $(DIST)/xpi-stage/$(XPI_NAME)/chrome/chatzilla;\
	fi
	# use tar for copying as cp doesn't portably preserve timestamps
	cd $(DIST)/xpi-stage/$(XPI_NAME) && \
	  tar $(TAR_CREATE_FLAGS) - * | ( cd $(STAGEDIST)/extensions/$(INSTALL_EXTENSION_ID) && tar -xf - )
	@echo "$(AB_CD)"
endif

repackage-zip-%: $(STAGEDIST)
	@$(MAKE) repackage-zip AB_CD=$* STAGEDIST=$(STAGEDIST)
